Analysis Flydra is a Matlab code developed to analyze the data generated by Flydra (Tracking System developed by Andrew Straw)

Analysis Flydra is a group of different Matlab functions, each one used to work over the data in a given way:

- MosquitoProject_main_withStruct_v2.m: Main script. It does as follows:
	- Load the input path where the H5 files are located.
	- Load the names of all files located in the input path
	- Define some constants related to the experiment as fps, limits for the XYZ axis, flightTimeLimit ...
	- Load all the data from each of the H5 files. 
	- Load color cues setup and timestamps related to the odor delivery and experiment start/end 
	- Clean the data by erasing all positions in file that are outside of the test section area and before/after the experiment start
	- As each H5 file is from a particular experiment, the data of each file is loaded as a struct

	- Count all the trajectories longer than flightTimeLimit and estimates the mean/min/max duration of the trajectories detected. 
	  This happens for trajectories detected before the odor delivery, during the odor delivery and after the odor delivery has been closed

	- Plot the heat maps for each of the experiments loaded. It loads separately the heat maps of the data before, while and after the odor is released.
	
	- If working with same type/gender of mosquitoes and same visual cues setup, you can plot a heat map with all the individuals of same type/gender loaded in the workspace
		
	- Counts the number times an insect in the experiment has been inside a volume around each of the visual cues to see which one do they prefere.
	- Plot the counts near each of the visual cues, with the data from all experiments loaded 
	- Plot the counts near each of the visual cues' positions with the data from all experiments loaded 
	- Plot the counts near each of the visual cues' positions separate per exeriment

	- Use the counts information file to calculate after how many time the insects where inside the volumes (once the odor is ON).

	- Calculate preference index for 2 cues (RED vs WHITE, GRAY vs WHITE...)
	
	- Estimate relative activity compared to previous activity (or compared to the first activity)

    - Generates a report in a sheet inside the file Mosquito_Project_Report.xlsx


load_output_folder(outputPath, inputFolder)
	Generates the output folder in function of the input folder name and
	return the name of the output folder
	Arguments:
	   - outputPath: path where to create the experiment output folder
	   - inputFolder: Name of the experiment input folder
	 Output
	   - outFolder: The name of the output folder generated


load_data_from_file(filePath, loadFullDataset);
	Function to load the insect IDs, their XYZ values, frames number and timestamps when the position was acquired
	Arguments: 
	   - file: Path/name of the h5 file
	   - loadFullDataset: Boolean flag to check if we want to work with the
	   - Flag to select between full dataset or only the first half
	Returns: [attr_id, attr_time, attr_frame, attr_x, attr_y, attr_z]
	   - attr_id: column vector with all the insect IDs detected by Flydra
	   - attr_time: column vector timestamps where the insect ID was detected by Flydra in the position XYZ
	   - attr_frame: column vector frame number where the insect ID was detected at a given timestamp
	   - attr_x: column vector with all the positions in the X axis
	   - attr_y: column vector with all the positions in the Y axis
	   - attr_z: column vector with all the positions in the Z axis object ids, frame numbers and X,Y,Z positions

load_exp_settings(fileName)
	Function to load the timestamp values and order and positions of clues (odor/color and their XYZ position) inside the test section for the mosquito project
	Arguments:
	   - fileName: Name of the file which we are working (to load the related timestamps, cues, etc.)
	Returns:  [cluesSetup, ts_startAIR, ts_startCO2, ts_endCO2, ts_endAIR, mosquitoType, mosquitoGender]
	   - cluesSetup= {'Odor': xOdor yOdor zOdorZ; 'color1' x1 y1 z1; 'color2' x2 y2 z2; ... 'colorN' xN yN zN}
	   - mosquitoType: type of mosquito: wt (wild type), m1 (mutant 1), m2 (mutant 2), m0 (mutant 1 and 2), lx (x= 1..N) values are assigned in the experiments that we run blinded (UCSB knows which type are but us not)
	   - mosquitoGender; gender of the mosquito: m (male), f (female)


erase_pos_outside_WT_v2(attr_id, attr_time, attr_frame, attr_x, attr_y, attr_z, lim_x, lim_y, lim_z);
	Function to erase from the dataset all the XYZ points that have been detected outside of the wind tunnel (due to Flydra position estimation error)
	Arguments
   	   - attr_id: column vector with all the insect IDs detected by Flydra
	   - attr_time: column vector timestamps where the insect ID was detected by Flydra in the position XYZ
	   - attr_frame: column vector frame number where the insect ID was detected at a given timestamp
	   - attr_x: column vector with all the positions in the X axis
	   - attr_y: column vector with all the positions in the Y axis
	   - attr_z: column vector with all the positions in the Z axis object ids, frame numbers and X,Y,Z positions
	   - lim_x: limits in the X axis
	   - lim_y: limits in the Y axis	   -
	   - lim_z: limits in the Z axis
	Returns: [attr_id, attr_time, attr_frame, attr_x, attr_y, attr_z]
	   - It is the same matrix but with the rows where the XYZ values where outside the windtunnel erased


add_visual_cues_to_plot(figPlot, cluesSetup)
	Function to add the odor and visual cues used in the experiment to the plot.
	Arguments:
	   - figPlot:      Current plot where we want to add the odor and visual cues
	   - cluesSetup:   Cell matrix with the odor/visual cues used and their XYZ
	                   position
	Returns:
	   - figPlot:      Current plot with the cues added 


generate_PI(data, i, k)
	Generate Preference Index (PI) for values in col 1 and 2 from data PI= (data(i)- data(k))/totalTraj
	Arguments:
	   - data: Array containing the values to calculate the PI (row= expIndex)
	   - i:    Index for the Main Value in the expCues list of first experiment
	   - k:    Index for the 2nd value in the expCues list of first experiment
	Output:
	   - piList: List with the PI towards the Main Value


count_trajectories_v3([dataset(expIndex).attr_id(indexPostCO2), dataset(expIndex).attr_time(indexPostCO2)], flightTimeLimit);
    Function to count the number of trajectories longer than a flightTimeLimit. The funciton also plot and stimation of minimum and
    maximum trajectories duration detected and an estimation of the average flight duration of all trajectories detected
    Arguments:
        - data: col vector with all the different IDs detected by Flydra
        - fps: frames per second used by Flydra
        - flightTimeLimit: minimun time threshold to consider a real trajectory
    Returns:
        - totalTraj: number of different trajectories, longer that flightTime limit, detected by Flydra
        - avgTime:  Average duration (in seconds) for all trajectories detected by FLydra
        - maxTime: Longest trajectory time (in seconds)


plot_XY_XZ_heatmaps_v5(dataset(expIndex).attr_x(indexPostCO2), dataset(expIndex).attr_y(indexPostCO2), dataset(expIndex).attr_z(indexPostCO2), dataset(expIndex).expCues,strcat(num2str(expIndex),'_3_',dataset(expIndex).fileName(1:15),'_heatmap_postCO2'));   
	Function to plot the heatmaps containing the XYZ preferences. The data is displayed in 2 subplots: XY positions and XZ positions. -ve Y axis is the left side of the WT and +ve Y axis is the right. If required, odor and Visual clues are also plotted
	Arguments:
		- plotCues: Control falg to add the odor and visual cues used to the plot
		- posX: column vector with the positions in the X axis 
		- posY: column vector with the positions in the Yaxis 
		- posZ: column vector with the positions in the Z axis
		- cuesSetup: cell matrix containing the cue and its XYZ position [{cue} {posX} {posY} {posZ}]
		- imgTitle: name to use when saving the heatmap as .png or .fig


count_insect_in_volume_v7(strcat(outputPath, fileName), dataset(expIndex), flightTimeLimit, odorStim, randomCenter);
	 Count insects near visualClue when the oor stim is being released per experiment. 
	 An insect ID will be counted as many times as it passes over the volume. 
	 Data will be stored in a .xlsx sheet and returned to main project.
	 Data stored in the .xlsx file: 
	   - insectCtrInPos= [Cue position  OBJID, instantTimeStamp when objID is inside volume]
	   - [initial and final timestamps associated to the odorStim used]
	   - allCheckXYZ= [row indexes for a insect ID when its XYZ position is inside a volume ]
         WARNING!: the indexes are related to the subset of data for the odor analyzed (odorChecked). 
         To test values in full expriment ==> datase do dataset(expIndex).attr_id(indexesOdor(allCheckedXYZ))
	 Arguments:
	   - outputFile: name of the .xlsx file to create with the 
	   - dataEntry: Full dataset for a given experiment (matrix of matrices)
	   - flightTimeLimit: threshold (in seconds) to consider an insect ID 
	                      positions as a trajectory
	   - odorStim: Type of stimulus used when we want to count the insect near
	               a visual cue (AIR, CO2, POSTCO2)
        - randomCenter: Center of randomly selected volume to check behavior 
                   away from cues
	 Returns:
	   - countsPerPosition: Number of insects counted in each volume
	                        sourrounding a cue in an experiment 
	                       [InsectCountedInCue1, ..., InsectCountedInCueN]


plot_insect_near_vCue(countListWithCO2, subFolder, checkedType, checkedGender);
	 Plot the number of insect detected near each of the visual cues
	 Arguments:
	   - data: matrix withe the number of insects counted in each volume per
        	   visual cue (columns) and per experiments (row)                      
	           [InsectCountedInCue1, ..., InsectCountedInCueN]
	   - subFolder: Indicator of the experiment being currently analyzed
	   - checkedType: Type of mosquitoes being currently analyzed (wt,l...)
	   - checkedGender: Gender of the mosquitoes currently being analyzed


plot_insect_near_position(countListWithCO2, checkedType, checkedGender);
	 Plot the number of insect detected near each of the visual cues
	 Arguments:
	   - data: matrix withe the number of insects counted in each volume per
        	   visual cue (columns) and per experiments (row)                      
	           [InsectCountedInCue1, ..., InsectCountedInCueN]
	   - subFolder: Indicator of the experiment being currently analyzed
	   - checkedType: Type of mosquitoes being currently analyzed (wt,l...)
	   - checkedGender: Gender of the mosquitoes currently being analyzed


plot_insect_near_position_per_exp(countListWithCO2, xNames, subFolder);
	 Plots counts per position and per experiment. Data contains the counts 
	 for all the experiments (one experiment day per row).
	 WARNING: Colors assigned to position must be added a posteriori (via Paint)
	 Arguments:
	   - data: [expIndex countsForPos_1 countsForPos_2 countsForPos_3 countsForPos_4]
	   - xNames: List with the files names used for data
	   - subFolder: Indicator of the experiment being currently analyzed


estimate_relative_flt_activity_v2(data, flightTimeLimit)
    Estimate the relative flight activity by counting the number of trajectories and the sum of all trajectories in a given the parts of an experiment
    Arguments
        - data: subset of data with the ID and time information for a given part (PrevCO2/WithCO2/PostCO2) of a given experiment date
        - flighttimeLimit: minimum threshold (in seconds) to consider a set of points for an ID as an insect trajectory
    Returns
        - toTalTraj: the number of trajectories found inside the data subset
        - totalDurationFlights: sum of the duration (in seconds) of all trajectories grouped in totalTraj


generate_report(outPath, trajSmry, expSheet, fileNameList, countInVolList, baseCueIndexList, piList)
    Store all the information given as argument in a .xlsx file
    Arguments:
        - outPath: Output path
        - trajSmry: Summary containing # of trajectories, mean trajectory time duration and Max trajectory time duration (for prevCO2,
               withCO2 and postCO2)
       - expSheet: Name of the sheet assigned at this experiment type
       - fileNameList: Column vector with the dates of each experiment
       - countInVolList: Counts of insects in a volume around the visual cues
       - baseCueIndexList: Column vector with the column index of the color base (used with data in countInVolList)
       - testedColorList: Color used  against the base color in the experiment 
       - piList: Column vector with the Preference Index values for each experiment date
     Output
       - A file called Mosquito_Project_Report.xlsx with a sheet called as
          expSheet that contains the data contained in the arguments.
        If the files already exists, the new shee is added. 
        If the sheets already exists, it is erased witht he new information

function generate_report_for_mutants(outPath,fileName, expSheet, fileNameList, trajSmry, countInVolList, baseColorIndexList, testedColorList, piList)
    Store all the information given as argument in a .xls file
    Arguments:
       - outPath: Output path
       - fileName: name of the output file
       - expSheet: Name of the sheet assigned at this experiment type
       - fileNameList: Column vector with the dates of each experiment  
       - trajSmry: Summary containing num of trajectories, mean trajectory time 
                   duration and Max trajectory time duration (for prevC)2,
                   withCO2 and postCO2)
       - countInVolList: Counts of insects in a volume around the visual cues
       - baseCueIndexList: Column vector with the column index of the color
                        base (used with data in countInVolList)
       - testedColorList: Color used  against the base color in the experiment 
       - piList: Column vector with the Preference Index values for each 
                 experiment date
     Output
       - A file called Mosquito_Project_Report.xlsx with a sheet called as
           expSheet that contains the data contained in the arguments.
           If the files already exists, the new shee is added. If the sheets
           already exists, it is erased witht he new information
    

load_summary_report(filePath, fname)
    Function to load the information for all experiments stored in the report file 
    Arguments
        - filePath: Path to file
        - fname: Name of the file
    Returns
        - trajSummary: table withthe information regrarding the trajectories
        - countsSummary: table witht he information regarding the counts per position
        - PISummary: table containing the Preference Index information

save_counts_over_time_in_file(p1, p2, p3, p4)
    Function to save the conts inside a volume over time (counts occurred at a given number of secods)
    Arguments:
        - pX: Matrices with the number of counts in the volume located in position X for each time group per experiment. (rows: experiment index, cols: time group)

save_plot_in_exp_folder(graph, imgTitle)
    Function to save the plot in the output folder for the experiment type
    Arguments: 
        - graph: plot to save as png
        - imgTitle: name for the png file to create

load_ts_insect_in_volume_per_groups(numGrps, filesPath, filesList) 
    Load instants where insect are inside a cue volume and group them by time after the odor was released 
    Arguments:
        - numGrps: number of time groups  to divide the data 
    	- filesPath: path to the files
        - fileLis: List of the files to work with
    Returns: 
        - pX: Matrices with the number of counts in the volume located in position X  for each time group per experiment. (rows: experiment index, cols: time group)

***************************************
Scripts to analyze data 
- MosProj_main_pool_exp.m
    Script to work with a group of h5 files with the same visual stimuli. This file contains code to:
    - Load data from several h5 files located int he same directory.
    - Analyze number of trajectories, counts near cues and preference index for allexperiments loaded. 
    - Save main information (per each of the experiments loaded)in file Mosquito_Project_Report and counts near cues information in a xls file (in subfolder \analysisData\).
    - Load information from files generated above and analyze the insect behavior near the counts in a higher detail.
- MosProj_main_single_exp.m
    Script to work with a given experiment h5 file only. This file contains code to:
    - Load data from h5 file.
    - Analyze number of trajectories, counts near cues and preference index.
    - Save main experiment information in file Mosquito_Project_Report and counts near cues information in a xls file (in subfolder \analysisData\).
    - Load information from files generated above and analyze the insect behavior near the counts in a higher detail.
- analyze_mutants_lineX_exp.m
    Script to work with a a group of h5 files for the lineX mutants project. This file contains code to:
    - Load data from several h5 files located int he same directory.
    - Analyze number of trajectories, counts near cues and preference index for allexperiments loaded. 
    - Save main information (per each of the experiments loaded)in file Mosquito_Project_Report and counts near cues information in a xls file (in subfolder \analysisData\).
    - Load information from files generated above and analyze the insect behavior near the counts in a higher detail.
- analyze_white_vs_black_exp.m
   Script to work with a a group of h5 files for the white versus black experiments. This file contains code to:
    - Load data from several h5 files located int he same directory.
    - Analyze number of trajectories, counts near cues and preference index for allexperiments loaded. 
    - Save main information (per each of the experiments loaded)in file Mosquito_Project_Report and counts near cues information in a xls file (in subfolder \analysisData\).
    - Load information from files generated above and analyze the insect behavior near the counts in a higher detail.
- analyze_white_vs_gray_exp.m
   Script to work with a a group of h5 files for the white versus gray experiments. This file contains code to:
    - Load data from several h5 files located int he same directory.
    - Analyze number of trajectories, counts near cues and preference index for allexperiments loaded. 
    - Save main information (per each of the experiments loaded)in file Mosquito_Project_Report and counts near cues information in a xls file (in subfolder \analysisData\).
    - Load information from files generated above and analyze the insect behavior near the counts in a higher detail.
Functions
- add_visual_cues_to_plot.m
- count_insect_in_volume_v7.m
- erase_pos_outside_WT_v2.m
- estimate_relative_flt_activity_v2.m
- generate_PI.m
- generate_report.m
- generate_report_for_mutants
- load_data_from_file.m
- load_exp_settings.m
- load_summary_report.m
- load_ts_insect_in_volume_per_groups.m
- plot_insect_near_position.m
- plot_insect_near_position_per_exp.m
- plot_insect_near_vCue.m
- plot_XY_XZ_heatmaps_v5.m
- save_counts_over_time_in_file.m
- save_plot_in_exp_folder.m
---------------------------------------
Scripts/Functions currently not used
- load_exp_settings_all_exp_types.m
- load_exp_settings_anStephensi.m
- check_preference_in_testSection.m
- manage_plottings.m
- MosquitoProject_main_withStruct_v2.m

***************************************
